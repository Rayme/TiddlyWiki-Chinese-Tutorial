created: 20220817024219376
creator: Miao
modified: 20220817030832764
modifier: Miao
tags: 使太微更易用
title: 宏、微件和插件
type: text/vnd.tiddlywiki


未完成编辑。。。

! 一、宏

!! 宏调用

宏调用语法：`<<两个尖括号>>`。

宏是一些文本片段。WikiText 可使用该名称为嵌入片段的简写方法。


```
变量的使用：<<名称 空格 参数值参数名称 空格 : 空格 参数值 空格>>

```

使用尖括号嵌入宏，这种嵌入方式被称为 调用宏，且每个调用可以提供一组不同的参数，替换在宏定义片段中的特定占位符。

详细介绍地址：https://bramchen.github.io/tw5-docs/zh-Hans/#Macro%20Call%20Syntax

宏：对微件的调用，自动化地复用内容的；宏可以封装 WikiText 的重复片段，以便您可以轻松地重复使用它们。比如在条目中嵌入目录，并且指定sort参数名对目录排序.例如

```
<<toc-selective-expandable '目录'sort : "sortan[]">>
```

!! 宏定义


一个宏是用一个 \define 编译指令定义的。像所有编译指令一样，这只能出现在条目的开始。

```
\define 宏名称(tag,sort:"",参数名列表)
<$微件></$微件>
\end
```


宏可以对很多小工具进行封装以达到某个特定的功能，解决我们的问题。即站在实用的角度来看插件里有多个宏，宏里提供微件被使用；

最好的例子~$:/core/macros/toc，搜索toc-selective-expandable宏定义，以此开头的宏定义`\define toc-selective-expandable(tag,sort:"",itemClassFilter,exclude,path)`

''占位符''，代码段可以包含参数的占位符。它们由美元符号之间的参数名称组成，比如 `$this$`

它也可以包含变量的占位符。 它们由美元符号和圆括号之间的变量名称（或宏名称）组成，比如 `$(this)$`

''范围''，宏在定义它们的条目以及嵌入（transcludes）它的任何条目中有效。定义了宏内容的条目可以添加 `$:/tags/Macro` 系统标签，使所有的条目都可以使用宏


! 二、微件Widget小工具

微件（小工具）是页面渲染的基本组成部分。即页面可见的部分。比如列表微件、标题微件、链接微件。

微件的使用语法：

```
<$xxx>特殊的HTML标签</xxx>
```

说明：小工具提供 WikiText 更丰富的功能。它们与 HTML 元素 使用相同的标记方式，但是标记的名称前包含一个 $ 符号。例子：`<$button message="tm-navigate" to="HelloThere">打开 ~HelloThere</$button>`


''变量''，是一个可以通过在小工具树的某一分支的名称访问的文本片段。该片段被称为变量的值。


维基文本中的小工具：action、button、set、browse等等。大概64个小工具。详细说明：https://bramchen.github.io/tw5-docs/zh-Hans/#Widgets%20in%20WikiText





! 三、插件

一个插件就是一组条目的集合，它将众多相互关联的为实现特定功能的条目封装在一起，成为一个以 $:/ 开头的系统条目。



公式插件：http://chronicles.wiki/TiddlyWikiFormula/

在底部显示annotation的功能插件,Refnotes：https://kookma.github.io/TW-Refnotes/

http://newtids.tiddlyspot.com/，这个挺好用，如果你有一个列表title,想快速创建所有列表文本的tid用这个很爽。


http://tw-tables.tiddlyspot.com/还有这个，这个是一个搜索和表格结合的示例，可以参考，我就是按他这个，把它里面的表格改成shiraz的，他这个用的是老版本的shiraz表格，如果用得用新表格的宏。

[img[shiraz动态表格.jpg]]

可以联动放到一个页面或者放侧边栏，跟有样式的列表和表格联动，我倾向于放在侧边栏。而且保留一些常用的筛选器放在侧边会很方便。

